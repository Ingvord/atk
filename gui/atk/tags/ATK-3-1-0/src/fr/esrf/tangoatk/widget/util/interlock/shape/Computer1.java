package fr.esrf.tangoatk.widget.util.interlock.shape;
/* Class generated by JDraw */

import java.awt.*;

/** ---------- Computer1 class ---------- */
public class Computer1 {

  private static int[][] xPolys = null;
  private static int[][] yPolys = null;

  private static Color sColor0 = new Color(204,204,204);
  private static Color sColor1 = new Color(0,51,51);

  private static int[][] xOrgPolys = {
    {-29,-29,-2,-2},
    {-2,29,29,-2},
    {-29,-2,29,0},
    {-15,-18,-4,19,17,-2},
    {-13,-18,-21,-21,-19,-13},
    {-3,-11,-13,-13,-5},
    {-4,-5,-5,-3,21,23,23,22},
    {0,-2,-2,-1,20,21,21,20},
  };

  private static int[][] yOrgPolys = {
    {13,4,13,26},
    {26,16,4,13},
    {4,13,4,-1},
    {0,4,9,4,0,2},
    {1,0,-2,-18,-20,-22},
    {-27,-25,-22,1,3},
    {3,1,-25,-27,-27,-25,-3,-1},
    {0,-1,-22,-25,-25,-23,-5,-3},
  };

  static public void paint(Graphics g,Color backColor,int x,int y,double size) {

    // Allocate array once
    if( xPolys == null ) {
      xPolys = new int [xOrgPolys.length][];
      yPolys = new int [yOrgPolys.length][];
      for( int i=0 ; i<xOrgPolys.length ; i++ ) {
        xPolys[i] = new int [xOrgPolys[i].length];
        yPolys[i] = new int [yOrgPolys[i].length];
      }
    }

    // Scale and translate poly
    for( int i=0 ; i<xOrgPolys.length ; i++ ) {
      for( int j=0 ; j<xOrgPolys[i].length ; j++ ) {
        xPolys[i][j] = (int)((double)xOrgPolys[i][j]*size+0.5) + x;
        yPolys[i][j] = (int)((double)yOrgPolys[i][j]*size+0.5) + y;
      }
    }

    // Paint object
    g.setColor(backColor);g.fillPolygon(xPolys[0],yPolys[0],xPolys[0].length);
    g.setColor(Color.black);g.drawPolygon(xPolys[0],yPolys[0],xPolys[0].length);
    g.setColor(backColor);g.fillPolygon(xPolys[1],yPolys[1],xPolys[1].length);
    g.setColor(Color.black);g.drawPolygon(xPolys[1],yPolys[1],xPolys[1].length);
    g.setColor(Color.black);
    g.drawLine((int)(0.0*size+0.5)+x, (int)(19.0*size+0.5)+y, (int)(10.0*size+0.5)+x, (int)(16.0*size+0.5)+y);
    g.setColor(Color.black);
    g.drawLine((int)(16.0*size+0.5)+x, (int)(8.0*size+0.5)+y, (int)(16.0*size+0.5)+x, (int)(20.0*size+0.5)+y);
    g.setColor(Color.black);
    g.drawLine((int)(16.0*size+0.5)+x, (int)(14.0*size+0.5)+y, (int)(29.0*size+0.5)+x, (int)(10.0*size+0.5)+y);
    g.setColor(backColor);g.fillPolygon(xPolys[2],yPolys[2],xPolys[2].length);
    g.setColor(Color.black);g.drawPolygon(xPolys[2],yPolys[2],xPolys[2].length);
    g.setColor(backColor);g.fillPolygon(xPolys[3],yPolys[3],xPolys[3].length);
    g.setColor(Color.black);g.drawPolygon(xPolys[3],yPolys[3],xPolys[3].length);
    g.setColor(backColor);g.fillPolygon(xPolys[4],yPolys[4],xPolys[4].length);
    g.setColor(Color.black);g.drawPolygon(xPolys[4],yPolys[4],xPolys[4].length);
    g.setColor(backColor);g.fillPolygon(xPolys[5],yPolys[5],xPolys[5].length);
    g.setColor(Color.black);g.drawPolygon(xPolys[5],yPolys[5],xPolys[5].length);
    g.setColor(backColor);g.fillPolygon(xPolys[6],yPolys[6],xPolys[6].length);
    g.setColor(Color.black);g.drawPolygon(xPolys[6],yPolys[6],xPolys[6].length);
    g.setColor(sColor0);g.fillPolygon(xPolys[7],yPolys[7],xPolys[7].length);
    g.setColor(sColor1);g.drawPolygon(xPolys[7],yPolys[7],xPolys[7].length);

  }

  static public void setBoundRect(int x,int y,double size,Rectangle bound) {
    bound.setRect((int)(-29.0*size+0.5)+x,(int)(-27.0*size+0.5)+y,(int)(59.0*size+0.5),(int)(54.0*size+0.5));
  }

}

