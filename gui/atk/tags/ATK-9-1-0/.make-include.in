JAVAC=@JAVAC@ @JAVACFLAGS@
JAVA=@JAVA@ -D@TANGOHOST@
JAR=@JAR@
JAVADOC=@JAVADOC@

COREMANIFEST=@ATKHOME@/src/fr/esrf/tangoatk/core/manifest.mf
WIDGETMANIFEST=@ATKHOME@/src/fr/esrf/tangoatk/widget/manifest.mf
export CLASSPATH=@CLASSPATH@
export JTARGETDIR=@JTARGETDIR@
export JDOCDIR=@ATKDOC@
export JAVA_HOME=@JAVA_HOME@
export TANGO_HOME=@TANGOHOME@

PGENERATOR=fr.esrf.tangoatk.util.BeanPropertyGenerator
PRECIOUS=$(subst java,info, $(BEANINFO))

.PRECIOUS: $(PRECIOUS)


CWD=$(subst @ATKSRC@/,,$(PWD))

PACKAGE=$(subst /,.,$(CWD))

TARGET:=$(JTARGETDIR)/$(CWD)


$(TARGET)/%.class: %.java
	@echo $< >> .targets


J = @if [ -f .targets ]; then \
	echo $(JAVAC) -d $(JTARGETDIR) `cat .targets`; \
	echo ;\
	$(JAVAC) -d $(JTARGETDIR) `cat .targets ; rm .targets > /dev/null `; \
    fi


beaninfo:
	$(JAVA) $(PGENERATOR) $(BEANINFO)
	@if [ "x$(BEANINFO)" = "x" ]; then           \
	  files="";                                   \
	else                                          \
	  files="$(BEANINFO)";                        \
	  echo $(JAVAC) -d $(JTARGETDIR) $$files;     \
	  $(JAVAC) -d $(JTARGETDIR) $$files;	      \
	fi                                            \

manifest.mf: .force
	rm manifest.mf ;                                                     \
        if [ "x$(BEANINFO)" = "x" ]; then                                   \
	   files="";                                                         \
  	   touch .manifest.mf;                                               \
        else                                                                 \
           files="$(BEANINFO)";                                              \
     	   for d in $$files; do                                              \
              d=`echo "$(PACKAGE)" | tr A-Z a-z`.$$d;                        \
   	      d=`echo $$d | sed 's/\./\\//g'`;                               \
	      echo "Name:" `echo $$d | sed 's/BeanInfo.java/.class/g'` >> $@;\
	      echo "Java-Bean: True" >> $@;                                  \
              echo "" >> $@;                                                 \
           done                                                              \
        fi;                                                                  \

class-clean:
	rm $(TARGET)/*.class 2>/dev/null 


icons:
	cp *.gif $(TARGET) > /dev/null 2>&1 || true; 
	cp *.jpg $(TARGET) > /dev/null 2>&1 || true; 
	cp *.png $(TARGET) > /dev/null 2>&1 || true; 

verifyjar = pwd=`pwd`;               \
	jardir=$(1) ;   \
	mkdir -p $$jardir;        \
	cd $$jardir ;             \
	$(JAR) xf $(JTARGETDIR)/$(2).jar > /dev/null ; \
	$(JAVA) fr.esrf.tangoatk.util.JarVerifier $$jardir|| error=1; \
	rm -rf $$jardir; \
	exit $$error; \


lc = `echo $(1) |  tr A-Z a-z`;

.force:
	
