/*
 * Trend.java
 *
 * Created on May 13, 2002, 4:28 PM
 */

package fr.esrf.tangoatk.widget.attribute;
import fr.esrf.tangoatk.widget.util.IControlee;
import fr.esrf.tangoatk.core.INumberScalar;
import javax.swing.*;
/**
 *
 * @author  root
 */
public class Trend extends javax.swing.JPanel implements IControlee {
    JFrame parent;
    /** Creates new form Trend */
    public Trend(JFrame parent) {
	this();
	this.parent = parent;

    }

    public void setButtonBarVisible(boolean b) {
	jToolBar2.setVisible(b);
    }

    public boolean isButtonBarVisible() {
	return jToolBar2.isVisible();
    }
    
	
    public Trend() {
	initComponents();
    }

    /**
     * This <code>setModel</code> which takes an AttributeList as a
     * parameter, will just add the attributes in the list to the list
     * viewer in the Trend. It will not add any of the attributes to the
     * Trend
     * @param list a <code>fr.esrf.tangoatk.core.AttributeList</code> value
     */
    public void setModel(fr.esrf.tangoatk.core.AttributeList list) {
	this.coreList = list;
	System.out.println(list.size());
	attributeList.setModel(coreList);
    }

    /**
     * <code>addAttribute</code> will add the INumberScalar to the 
     * Trend. Additional calls to addAttribute will add more INumberScalars
     * to the trend.
     * @param scalar a <code>fr.esrf.tangoatk.core.INumberScalar</code> value
     */
    public void addAttribute(fr.esrf.tangoatk.core.INumberScalar scalar) {
	if (coreList == null) {
	    coreList = new fr.esrf.tangoatk.core.AttributeList();
	}
	coreList.add(scalar);
	attributeList.setModel(coreList);

	if (!adapter.hasModel(scalar)) {
		adapter.setModel(scalar);		
	}

    }

    /**
     * <code>setModel</code>
     *
     * @param scalar a <code>fr.esrf.tangoatk.core.INumberScalar</code> value
     * @deprecated use addAttribute instead.
     */
    public void setModel(fr.esrf.tangoatk.core.INumberScalar scalar) {
	if (coreList == null) {
	    coreList = new fr.esrf.tangoatk.core.AttributeList();
	}
	try {
	    coreList.add(scalar);
	    attributeList.setModel(coreList);

	    if (!adapter.hasModel(scalar)) {
		adapter.setModel(scalar);		
	    }
	    if (parent != null && !parent.isVisible()) {
		parent.pack();
		parent.show();
	    }
	    
	} catch (Exception e) {
	    
	} // end of try-catch
    }
	
    public fr.esrf.tangoatk.core.AttributeList getModel() {
	return coreList;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
          adapter = new fr.esrf.tangoatk.widget.attribute.JChartAdapter();
          coreList = new fr.esrf.tangoatk.core.AttributeList();
          jPopupMenu1 = new javax.swing.JPopupMenu();
          addItem = new javax.swing.JMenuItem();
          removeItem = new javax.swing.JMenuItem();
          chart = new com.klg.jclass.chart.beans.SimpleChart();
          jScrollPane1 = new javax.swing.JScrollPane();
          attributeList = new javax.swing.JList();
          jToolBar2 = new javax.swing.JToolBar();
          optionButton = new javax.swing.JButton();
          
          adapter.setChart(chart);
          addItem.setText("Add");
          addItem.addActionListener(new java.awt.event.ActionListener() {
              public void actionPerformed(java.awt.event.ActionEvent evt) {
                  addItemActionPerformed(evt);
              }
          });
          
          jPopupMenu1.add(addItem);
          removeItem.setText("Remove");
          removeItem.addActionListener(new java.awt.event.ActionListener() {
              public void actionPerformed(java.awt.event.ActionEvent evt) {
                  removeItemActionPerformed(evt);
              }
          });
          
          jPopupMenu1.add(removeItem);
          
          setLayout(new java.awt.GridBagLayout());
          java.awt.GridBagConstraints gridBagConstraints1;
          
          chart.setData(null);
          chart.setLegendVisible(true);
          chart.setName("");
          gridBagConstraints1 = new java.awt.GridBagConstraints();
          gridBagConstraints1.gridx = 1;
          gridBagConstraints1.gridy = 1;
          gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
          gridBagConstraints1.weightx = 0.8;
          gridBagConstraints1.weighty = 0.1;
          add(chart, gridBagConstraints1);
          
          attributeList.addMouseListener(new java.awt.event.MouseAdapter() {
              public void mouseClicked(java.awt.event.MouseEvent evt) {
                  attributeListMouseClicked(evt);
              }
              public void mousePressed(java.awt.event.MouseEvent evt) {

                  attributeListMousePressed(evt);
              }
              public void mouseReleased(java.awt.event.MouseEvent evt) {
                  attributeListMouseReleased(evt);
              }
          });
          
          jScrollPane1.setViewportView(attributeList);
          
          gridBagConstraints1 = new java.awt.GridBagConstraints();
          gridBagConstraints1.gridx = 0;
          gridBagConstraints1.gridy = 1;
          gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
          gridBagConstraints1.weightx = 0.2;
          gridBagConstraints1.weighty = 0.1;
          add(jScrollPane1, gridBagConstraints1);
          
          jToolBar2.setFloatable(false);
          optionButton.setText("Options...");
          optionButton.addActionListener(new java.awt.event.ActionListener() {
              public void actionPerformed(java.awt.event.ActionEvent evt) {
                  optionButtonActionPerformed(evt);
              }
          });
          
          jToolBar2.add(optionButton);
          
          gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jToolBar2, gridBagConstraints1);
        
    }//GEN-END:initComponents

    private void removeItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeItemActionPerformed
        // Add your handling code here:
      
        fr.esrf.tangoatk.core.INumberScalar attribute =
	    (fr.esrf.tangoatk.core.INumberScalar)coreList.get(lastClick);
        adapter.removeModel(attribute);
    }//GEN-LAST:event_removeItemActionPerformed

    private void addItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemActionPerformed
        // Add your handling code here:
       
        fr.esrf.tangoatk.core.INumberScalar attribute =
	    (fr.esrf.tangoatk.core.INumberScalar)coreList.get(lastClick);
        adapter.setModel(attribute);
    }//GEN-LAST:event_addItemActionPerformed

    private void optionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionButtonActionPerformed
        // Add your handling code here:
	if (trendOptions == null) {
	    trendOptions = new TrendOptions(this);
	    trendFrame = new JFrame();
	    trendFrame.setContentPane(trendOptions);
	    trendFrame.pack();
	}
	trendFrame.show();
    }//GEN-LAST:event_optionButtonActionPerformed

    private void attributeListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attributeListMouseClicked
	attributeListMouseClicked(evt);
    }

    private void attributeListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attributeListMouseClicked
	attributeListMouseClicked(evt);
    }
    
    private void attributeListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attributeListMouseClicked
        // Add your handling code here:
        lastClick = attributeList.locationToIndex(evt.getPoint());
	if (lastClick != -1 && evt.isPopupTrigger()) {
	    jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());	    
	}
    }//GEN-LAST:event_attributeListMouseClicked

    public void setSamplingRate(double rate) {
	adapter.setSamplingRate(rate);
	if (trendOptions == null) return;
	trendOptions.setSamplingRate(rate);
	
    }

    public double getSamplingRate() {
	return adapter.getSamplingRate();
    }


    public void setXAxisLength(int length) {
	adapter.setXAxisLength(length);
	if (trendOptions == null) return;
	trendOptions.setXAxisLength(length);
    }

    public int getXAxisLength() {
	return adapter.getXAxisLength();
    }

    public void setLogarithmicScale(boolean logarithmic) {
	chart.setYAxisLogarithmic(logarithmic);
	if (trendOptions == null) return;
	trendOptions.setLogarithmicScale(logarithmic);
    }

    public boolean isLogarithmicScale() {
	return chart.getYAxisLogarithmic();
    }

    public void setListVisible(boolean b) {
	if (attributeList == null) return;
	jScrollPane1.setVisible(b);
    }

    public boolean isListVisible() {
	return attributeList.isVisible();
    }

    public void setShowingDeviceNames(boolean b) {
	adapter.setShowingDeviceNames(b);
    }

    public boolean isShowingDeviceNames() {
	return adapter.isShowingDeviceNames();
    }

    public com.klg.jclass.chart.JCChart getChart() {
	return chart;
    }

    public void ok() {
	getRootPane().getParent().setVisible(false);
    }


    boolean showingDeviceNames = true;
    
    int lastClick;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private fr.esrf.tangoatk.widget.attribute.JChartAdapter adapter;
    private fr.esrf.tangoatk.core.AttributeList coreList;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JMenuItem addItem;
    private javax.swing.JMenuItem removeItem;
    private com.klg.jclass.chart.beans.SimpleChart chart;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList attributeList;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JButton optionButton;
    // End of variables declaration//GEN-END:variables

    private TrendOptions trendOptions;
    private javax.swing.JFrame trendFrame;
    
    public static void main (String[] args) throws Exception {
	JFrame f = new JFrame();
	fr.esrf.tangoatk.core.AttributeList list =
	    new fr.esrf.tangoatk.core.AttributeList();

	Trend t = new Trend();
	list.setFilter(new fr.esrf.tangoatk.core.IEntityFilter () {
		public boolean keep(fr.esrf.tangoatk.core.IEntity entity) {
		    if (entity instanceof fr.esrf.tangoatk.core.INumberScalar) {
			return true;
		    }
		    
		    return false;
		}
	    });
	INumberScalar ns = (INumberScalar)list.add("eas/test-api/1/Att_sinus");
	t.setButtonBarVisible(false);
	list.setRefreshInterval(1000);
	list.startRefresher();
	t.addAttribute(ns);
	f.setContentPane(t);
	f.pack();
	f.show();
    } // end of main ()
    
}

