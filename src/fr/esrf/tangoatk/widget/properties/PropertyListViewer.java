/*
 * AttributePropertyListWidget.java
 *
 * Created on November 23, 2001, 10:07 AM
 */

package fr.esrf.tangoatk.widget.properties;
import java.util.*;
import java.awt.GridBagConstraints;
import fr.esrf.tangoatk.core.AEntityProperty;
import fr.esrf.tangoatk.core.AAttribute;

/**
 *
 * @author  assum@esrf.fr
 * @version $Id$
 */

public class PropertyListViewer extends javax.swing.JPanel {
    Map propertyList;
    boolean editable;
    PropertyViewer [] properties;
    javax.swing.JComponent parent;
    protected java.awt.GridBagConstraints constraints =
	new java.awt.GridBagConstraints();
    /** Creates new form AttributePropertyListWidget */

    public PropertyListViewer() {
        initComponents();
    }
    
    public void setEditable(boolean b) {
        editable = b;
	if (properties == null) return;
	
	for (int i = 0; i < properties.length; i++) {
            properties[i].setEditable(b);
        }

    }
    
    public boolean isEditable() {
        return editable;
    }
    

    public void setModel(Map m) {
	double maxLabelSize = 0;
	double maxValueSize = 0;
	propertyList = m;
	AEntityProperty ap;
	removeAll();
	properties = new PropertyViewer[propertyList.size()];
	int j = 0;
	for (Iterator i = propertyList.keySet().iterator();
	     i.hasNext();j++) {
	    ap = (AEntityProperty)propertyList.get((String)i.next());
	    properties[j] = new PropertyViewer();
	    properties[j].setModel(ap);
	    properties[j].show();
	    if (properties[j].getLabelWidth()> maxLabelSize)
		maxLabelSize = properties[j].getLabelWidth();
							       
	    if (properties[j].getValueWidth()> maxValueSize)
		maxValueSize = properties[j].getValueWidth();
							       
	    gbAdd(properties[j], 0, j);
	} // end of for ()


	for (j = 0; j < properties.length; j++) {
	    properties[j].setEditable(isEditable());
	    properties[j].setLabelWidth(maxLabelSize);
	    properties[j].setValueWidth(maxValueSize);
	    properties[j].repaint();
	} // end of for ()
	
	
    }

    protected void gbAdd(javax.swing.JComponent c, int x, int y) {
	constraints.anchor = GridBagConstraints.WEST;
	constraints.gridx = x; constraints.gridy = y;
	add(c, constraints);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        
        setLayout(new java.awt.GridLayout(0, 1));
        
    }//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public static void main(String [] args) {
	fr.esrf.tangoatk.core.AttributeList l =
	    new fr.esrf.tangoatk.core.AttributeList();
	PropertyListViewer nsv = new PropertyListViewer();
	AAttribute a = null;
	try {
	    a = (AAttribute)l.add("eas/test-api/1/Short_attr_w");
	    System.out.println("Done");
	} catch (Exception e) {
	    System.out.println(e);
	} // end of try-catch


        javax.swing.JFrame f = new javax.swing.JFrame();
	nsv.setModel(a.getPropertyMap());
        f.getContentPane().add(nsv);
        f.pack();
        f.show();
    }

}
