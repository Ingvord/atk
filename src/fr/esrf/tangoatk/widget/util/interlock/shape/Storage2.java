package fr.esrf.tangoatk.widget.util.interlock.shape;
/* Class generated by JDraw */

import java.awt.*;

/** ---------- Storage2 class ---------- */
public class Storage2 {

  private static int[][] xPolys = null;
  private static int[][] yPolys = null;


  private static int[][] xOrgPolys = {
    {-23,-21,-17,-9,-4,4,11,17,21,23,23,-23},
    {-23,-21,-17,-9,-4,4,11,17,21,23,22,18,12,6,-5,-11,-17,-21},
  };

  private static int[][] yOrgPolys = {
    {9,12,15,17,18,18,17,15,13,10,-10,-11},
    {-11,-8,-5,-3,-2,-2,-3,-5,-7,-10,-13,-16,-18,-19,-19,-18,-16,-13},
  };

  static public void paint(Graphics g,Color backColor,int x,int y,double size) {

    // Allocate array once
    if( xPolys == null ) {
      xPolys = new int [xOrgPolys.length][];
      yPolys = new int [yOrgPolys.length][];
      for( int i=0 ; i<xOrgPolys.length ; i++ ) {
        xPolys[i] = new int [xOrgPolys[i].length];
        yPolys[i] = new int [yOrgPolys[i].length];
      }
    }

    // Scale and translate poly
    for( int i=0 ; i<xOrgPolys.length ; i++ ) {
      for( int j=0 ; j<xOrgPolys[i].length ; j++ ) {
        xPolys[i][j] = (int)((double)xOrgPolys[i][j]*size+0.5) + x;
        yPolys[i][j] = (int)((double)yOrgPolys[i][j]*size+0.5) + y;
      }
    }

    // Paint object
    g.setColor(backColor);g.fillPolygon(xPolys[0],yPolys[0],xPolys[0].length);
    g.setColor(Color.black);g.drawPolygon(xPolys[0],yPolys[0],xPolys[0].length);
    g.setColor(backColor);g.fillPolygon(xPolys[1],yPolys[1],xPolys[1].length);
    g.setColor(Color.black);g.drawPolygon(xPolys[1],yPolys[1],xPolys[1].length);

  }

  static public void setBoundRect(int x,int y,double size,Rectangle bound) {
    bound.setRect((int)(-23.0*size+0.5)+x,(int)(-19.0*size+0.5)+y,(int)(47.0*size+0.5),(int)(38.0*size+0.5));
  }

}

